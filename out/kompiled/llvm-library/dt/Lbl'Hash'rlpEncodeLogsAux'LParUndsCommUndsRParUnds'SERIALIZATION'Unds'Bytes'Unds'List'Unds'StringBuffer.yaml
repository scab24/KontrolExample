args:
- - &id001 ['1']
  - LIST.List
next:
  default: &id003
    args:
    - - *id001
      - LIST.List
    - - [lit, '0', MINT.MInt 64]
      - MINT.MInt 64
    next:
      default: fail
      specializations:
      - - inj{SortSubstateLogEntry{}, SortKItem{}}
        - default: null
          specializations:
          - - Lbl'LBraUndsPipeUndsPipeUndsRBraUnds'EVM-TYPES'Unds'SubstateLogEntry'Unds'Int'Unds'List'Unds'Bytes{}
            - args:
              - - *id001
                - LIST.List
              - - [lit, '1', MINT.MInt 64]
                - MINT.MInt 64
              - - [lit, '0', MINT.MInt 64]
                - MINT.MInt 64
              next:
                action:
                - 49202
                - - - ['1', '1']
                    - LIST.List
                  - - ['0', '0', '0', '1']
                    - INT.Int
                  - - ['2', '0', '0', '1']
                    - BYTES.Bytes
                  - - &id002 ['2']
                    - BUFFER.StringBuffer
                  - - ['1', '0', '0', '1']
                    - LIST.List
              function: hook_LIST_range_long
              sort: LIST.List
              occurrence: ['1', '1']
            - [INT.Int, LIST.List, BYTES.Bytes]
          sort: STRING.String
          occurrence: ['0', '0', '1']
        - [STRING.String]
      sort: STRING.String
      occurrence: ['0', '1']
    function: hook_LIST_get_long
    sort: STRING.String
    occurrence: ['0', '1']
  specializations:
  - - '0'
    - args:
      - - *id001
        - LIST.List
      - - [lit, '0', MINT.MInt 64]
        - MINT.MInt 64
      - - [lit, '0', MINT.MInt 64]
        - MINT.MInt 64
      next:
        action:
        - 49201
        - - - *id002
            - BUFFER.StringBuffer
      function: hook_LIST_range_long
      sort: LIST.List
      occurrence: ['0', '1']
    - []
  - - '1'
    - *id003
    - [STRING.String]
  bitwidth: 64
  sort: MINT.MInt 64
  occurrence: &id004 [size, '1']
function: hook_LIST_size_long
sort: MINT.MInt 64
occurrence: *id004
